@page "/leiloes"
@inject HttpClient Http
@inject NavigationManager NavigationManager;
@inject ILeilaoDAO leiloes
@inject IPinturaDAO pinturas
@inject ILicitacaoDAO licitacoes
@inject IUtilizadorDAO utilizadores
@using DataLayer

<PageTitle>BelasArtes</PageTitle>



<!-- Fundo -->
<div style="width: 100%; height: 90%; position: absolute; background: white"></div>
<div style="width: 100%; height: 280%; left: 0%; top: 15%; position: absolute; background: rgba(64, 64, 64, 0.72)"></div>


<!-- Cabecalho -->
<img style="width: 5; height: 14%; left: 0%; top: 0.5%; position: absolute" src="logo.png" />
<div style="width: 30%; height: 20%; left: 2%; top: 4%; position: absolute; text-align: center; color: black; font-size: 200%; font-family: Inter; font-weight: 500; word-wrap: break-word">Leilões Belas Artes</div>
<div style="width: 100%; height: 0px; left: 0%; top: 15% ; position: absolute; border: 1px #1E1E1E solid"></div>

<button onclick="window.location.href='/profile'">
<div style="width: 10%; height: 10%; left: 90%; top: 5%; position: absolute; text-align: center; color: black; font-size: 175%; font-family: Inter; font-weight: 100; word-wrap: break-word">Perfil</div>
</button>
<div style="width: 0%; height: 8%; left: 91%; top: 3.5%; position: absolute; border: 1px rgb(0, 0, 0) solid"></div>

<button onclick="window.location.href='/leiloes'">
<div style="width: 10%; height: 10%; left: 82%; top: 5%; position: absolute; text-align: center; color: black; font-size: 175%; font-family: Inter; font-weight: 100; word-wrap: break-word">Leilões</div>
</button>
<div style="width: 0%; height: 8%; left: 83%; top: 3.5%; position: absolute; border: 1px rgb(0, 0, 0) solid"></div>

<button onclick="window.location.href='/'">
<div style="width: 10%; height: 10%; left: 74%; top: 5%; position: absolute; text-align: center; color: black; font-size: 175%; font-family: Inter; font-weight: 100; word-wrap: break-word">Home</div>
</button>


<!--Botoes de ordenar filtrar-->
<button>
<div style="width: 15%; height: 7.5%; left: 57%; top: 47%; position: absolute; background: #D9D9D9"></div>
<div style="width: 15%; height: 7.5%; left: 57%; top: 47%; position: absolute; color: black; font-size: 27px; font-family: Inter; font-weight: 167; word-wrap: break-word">Filtrar</div>
</button>

<button>
<div style="width: 15%; height: 7.5%; left: 76%; top: 47%; position: absolute; background: #D9D9D9"></div>
<div style="width: 15%; height: 7.5%; left: 76%; top: 47%; position: absolute; color: black; font-size: 27px; font-family: Inter; font-weight: 167; word-wrap: break-word">Ordenar</div>
</button>


<!--Barra pesquisa-->
<div style="width: 100%; height: 25.5%; left: 0%; top: 14.5%; position: absolute; background: #404040;"></div>
<div style="width: 60%; height: 10%; left: 20%; top: 22.5%; position: absolute; background: #f1f1f1; border-radius: 39px;"></div>
<img style="width: 4%; height: 7.5%; left: 22%; top: 23.5%; position: absolute;" src="lupa.png" />
<input type="text" placeholder="Pesquisar autor..." style="width: 50%; height: 7.5%; left: 27%; top: 24%; position: absolute; background: #f1f1f1; padding: 5px; border: none; font-size: 20px; font-family: Inter; font-weight: 167; box-sizing: border-box; outline: none;">


@for (int i = 0; i < Math.Min(8, listLeiloes.Count); i++){
    var leilao = listLeiloes[i];

    if (dictLeilaoFacade[leilao.Id].Leilao.Id.Equals(leilao.Id)){  
        if(@i%2==0){
            <!--Leilao 1-->
            <div style="width: 40%; height: 40%; left: 5%; top: @(60+(25*i))%; position: absolute; background: white; border-radius: 59px; border: 5px black solid"></div>
            <div style="width: 20%; height: 40%; left: 5%; top: @(60+(25*i))%; position: absolute; background: #D9D9D9; border-radius: 59px; border: 1px black solid"></div>
            <div style="width: 20%; height: 10%; left: 27.5%; top: @(64+(25*i))%; position: absolute; color: black; font-size: 32px; font-family: Inter; font-weight: 167; word-wrap: break-word">Obra: @dictLeilaoFacade[leilao.Id].Pintura.Nome </div>
            <div style="width: 10%; height: 5%; left: 27.5%; top: @(73+(25*i))%; position: absolute; color: black; font-size: 20px; font-family: Inter; font-weight: 167; word-wrap: break-word">Vendedor: @dictLeilaoFacade[leilao.Id].Vendedor.Nome</div>
            <div style="width: 15%; height: 7%; left: 27.5%; top: @(80+(25*i))%; position: absolute; color: black; font-size: 20px; font-family: Inter; font-weight: 167; word-wrap: break-word">Licitação Atual: @dictLeilaoFacade[leilao.Id].MaiorLicitacao</div>
            <div style="width: 15%; height: 10%; left: 27.5%; top: @(87+(25*i))%; position: absolute; color: black; font-size: 20px; font-family: Inter; font-weight: 167; word-wrap: break-word">Dias restantes: @((leilao.DataFim-DateTime.Now).Days)</div>
        }else{
            <!--Leilao 2-->
            <div style="width: 40%; height: 40%; left: 55%; top: @(60+(25*(i-1)))%; position: absolute; background: white; border-radius: 59px; border: 5px black solid"></div>
            <div style="width: 20%; height: 40%; left: 55%; top: @(60+(25*(i-1)))%; position: absolute; background: #D9D9D9; border-radius: 59px; border: 1px black solid"></div>
            <div style="width: 20%; height: 10%; left: 77.5%; top: @(64+(25*(i-1)))%; position: absolute; color: black; font-size: 32px; font-family: Inter; font-weight: 167; word-wrap: break-word">Obra: @dictLeilaoFacade[leilao.Id].Pintura.Nome </div>
            <div style="width: 10%; height: 5%; left: 77.5%; top: @(73+(25*(i-1)))%; position: absolute; color: black; font-size: 20px; font-family: Inter; font-weight: 167; word-wrap: break-word">Vendedor: @dictLeilaoFacade[leilao.Id].Vendedor.Nome</div>
            <div style="width: 15%; height: 7%; left: 77.5%; top: @(80+(25*(i-1)))%; position: absolute; color: black; font-size: 20px; font-family: Inter; font-weight: 167; word-wrap: break-word">Licitação Atual: @dictLeilaoFacade[leilao.Id].MaiorLicitacao</div>
            <div style="width: 15%; height: 10%; left: 77.5%; top: @(87+(25*(i-1)))%; position: absolute; color: black; font-size: 20px; font-family: Inter; font-weight: 167; word-wrap: break-word">Dias restantes: @((leilao.DataFim-DateTime.Now).Days)</div>
        }
    }
}


<!--Botoes de baixo-->
<div style="width: 10%; height: 5%; left: 45%; top: 258%; position: absolute; background: white; border-radius: 10px"></div>
<div style="width: 10%; height: 5%; left: 45%; top: 257.4%; position: absolute; color: black; font-size: 2vw; font-family: Inter; font-weight: 500; text-align: center; word-wrap: break-word">1/X</div>
<button>
<img style="width: auto; height: 3.5%; left: 45.8%; top: 258.8%; position: absolute; mix-blend-mode: hard-light; background: linear-gradient(0deg, white 0%, white 100%)" src="arrow.png" />
</button>
<button>
<img style="width: auto; height: 3.5%; left: 52.5%; top: 258.9%; position: absolute; mix-blend-mode: hard-light; transform: rotate(180deg); background: linear-gradient(0deg, white 0%, white 100%)" src="arrow.png" />
</button>



@code{
    private List<Leilao> listLeiloes = new List<Leilao>(); //tem todos os leiloes
    private Dictionary<int,LeilaoFacade> dictLeilaoFacade = new Dictionary<int, LeilaoFacade>(); //tem todos os leiloes
    private List<int> listNumLicitacoesByLeilao = new List<int>(); //so tem dos leiloes com licitacoes
    private List<int> listMaiorLicitacaoByLeilao = new List<int>(); //so tem dos leiloes com licitacoes

    private string artistaPretendido {get;set;} = "";

    class LeilaoFacade{
        public Leilao Leilao;
        public int MaiorLicitacao {get;set;}
        public Pintura Pintura {get;set;}
        public Datalayer.Utilizador Vendedor {get;set;}

        public LeilaoFacade (Leilao Leilao, int MaiorLicitacao, Pintura Pintura, Datalayer.Utilizador Vendedor){
            this.Leilao=Leilao;
            this.MaiorLicitacao=MaiorLicitacao;
            this.Pintura=Pintura;
            this.Vendedor=Vendedor;
        }
    }

    private void HandleEnterDown(KeyboardEventArgs e){
        if (e.Key == "Enter"){
            List<Leilao> leiloesByArtista=FiltrarByArtista(artistaPretendido);
        }
    }

    private List<Leilao> FiltrarByArtista(string artistaPretendido){
        List<Leilao> aux = new List<Leilao>();
        foreach (Leilao leilao in this.listLeiloes) {
            if(dictLeilaoFacade[leilao.Id].Pintura.Artista.Equals(artistaPretendido)){
                aux.Add(leilao);
            }
        }
        return aux;
    }
    
    public List<Leilao> OrdenarLeiloesDecorrer(List<Leilao> leiloes,List<int> listNumLicitacoesByLeilao,
    List<int> listMaiorLicitacaoByLeilao,int codModoOrdenacao) {
        if (codModoOrdenacao==1){ //crescente de tempo restante
            List<(DateTime,int)> sortingList = new List<(DateTime,int)>();
            for(int i=0;i<listLeiloes.Count();i++){
                DateTime dataFim = listLeiloes[i].DataFim;
                sortingList.Add((dataFim,listNumLicitacoesByLeilao[i]));
            }
            List<Leilao> sortedLeiloes = leiloes
                .Select((leilao, index) => new { Leilao = leilao, SortingTuple = sortingList[index] })
                .OrderBy(item => item.SortingTuple.Item1)
                .ThenBy(item => item.SortingTuple.Item2)
                .Select(item => item.Leilao)
                .ToList();
            return sortedLeiloes;
        }else if (codModoOrdenacao==2){ //decrescente de tempo restante
            List<(DateTime,int)> sortingList = new List<(DateTime,int)>();
            for(int i=0;i<listLeiloes.Count();i++){
                DateTime dataFim = listLeiloes[i].DataFim;
                sortingList.Add((dataFim,listNumLicitacoesByLeilao[i]));
            }
            List<Leilao> sortedLeiloes = leiloes
                .Select((leilao, index) => new { Leilao = leilao, SortingTuple = sortingList[index] })
                .OrderByDescending(item => item.SortingTuple.Item1)
                .ThenBy(item => item.SortingTuple.Item2)
                .Select(item => item.Leilao)
                .ToList();
            return sortedLeiloes;
        }else if(codModoOrdenacao==3){ //crescente do valor da ultima licitacao
            List<int> sortingList = new List<int>();
            for(int i=0;i<listLeiloes.Count();i++){
                sortingList.Add(listMaiorLicitacaoByLeilao[i]);
            }
            List<Leilao> sortedLeiloes = leiloes
                .Select((leilao, index) => new { Leilao = leilao, valorOrdenacao = sortingList[index] })
                .OrderBy(item => item.valorOrdenacao)
                .Select(item => item.Leilao)
                .ToList();
            return sortedLeiloes;
        }else if(codModoOrdenacao==4){ //decrescente do valor da ultima licitacao
            List<int> sortingList = new List<int>();
            for(int i=0;i<listLeiloes.Count();i++){
                sortingList.Add(listMaiorLicitacaoByLeilao[i]);
            }
            List<Leilao> sortedLeiloes = leiloes
                .Select((leilao, index) => new { Leilao = leilao, valorOrdenacao = sortingList[index] })
                .OrderByDescending(item => item.valorOrdenacao)
                .Select(item => item.Leilao)
                .ToList();
            return sortedLeiloes;
        }else{ //default
            List<(int,DateTime)> sortingList = new List<(int,DateTime)>();
            for(int i=0;i<listLeiloes.Count();i++){
                DateTime dataFim = listLeiloes[i].DataFim;
                sortingList.Add((listNumLicitacoesByLeilao[i],dataFim));
            }
            List<Leilao> sortedLeiloes = leiloes
                .Select((leilao, index) => new { Leilao = leilao, SortingTuple = sortingList[index] })
                .OrderByDescending(item => item.SortingTuple.Item1)
                .ThenBy(item => item.SortingTuple.Item2)
                .Select(item => item.Leilao)
                .ToList();
            return sortedLeiloes;
        }
    }

    protected override async Task OnInitializedAsync(){
        listLeiloes = await leiloes.LeiloesByEstado(2); //so leiloes ativos
        List<Leilao> auxLicitados = new List<Leilao>();
        List<Leilao> auxNaoLicitados = new List<Leilao>();

        foreach(Leilao leilao in listLeiloes){
            if ((await this.licitacoes.NumbLicitacoesByLeilao(leilao.Id)).Any()){        
                listNumLicitacoesByLeilao.Add((await this.licitacoes.NumbLicitacoesByLeilao(leilao.Id)).First());
                listMaiorLicitacaoByLeilao.Add((await this.licitacoes.MaiorLicitacaoByLeilao(leilao.Id)).First());
                auxLicitados.Add(leilao);
            }else{
                auxNaoLicitados.Add(leilao);
            }
            Pintura pintura = (await pinturas.GetPinturaById(leilao.CodPintura)).First();
            if (pintura.EmailVendedor!= null){
                dictLeilaoFacade.Add(leilao.Id,new LeilaoFacade(leilao,(await this.licitacoes.MaiorLicitacaoByLeilao(leilao.Id)).First(),
                pintura,(await utilizadores.GetUtilizadorByEmail(pintura.EmailVendedor)).First()));    
            }
        }
        listLeiloes=OrdenarLeiloesDecorrer(auxLicitados,listNumLicitacoesByLeilao,listMaiorLicitacaoByLeilao,0);
        listLeiloes.AddRange(auxNaoLicitados);
    }
}